      PROGRAM DRIVTP
C
C DRIVER PROGRAM TO TEST OUT TRANSPORT (TP) PROPERTIES CHEMKIN
C PACKAGE.  JES chemkin II VERSION OF Jan 1990. Modified for
C v1.9 of tp package on 7-96
C
C program changed (fixed bug in CKHBMS call, added SI unit output)
C pintgen 28/10/03
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
C ALL DIMENSIONS AND I/O UNITS GIVEN IN THESE PARAMETER
C STATEMENTS
C
      PARAMETER (NEL = 4, NK = 40, NREAC = 300, NO = 4, NLITE = 1,
     1 LINK = 25, LINKMC = 35, NCHAR = 76, LIN =5, LOUT=6, LSAVE=7,
     2 LENIWK = 17000, LENWK = 14000, lencwk = 500, SMALL = 1.D-100,
     3 LENIMC =   4*NK + NLITE,
     4 LENRMC =  NK*(19 + 2*NO + NO*NLITE) + (NO+15)*NK**2 )
C
      DIMENSION X(NK), Y(NK), D(NK), VIS(NK), CON(NK), DJK(NK,NK),
     1 WT(NK), VAL(10),ICKWRK(LENIWK),CKWRK(LENWK),IMCWRK(LENIMC),
     2 RMCWRK(LENRMC), TDR(NK), EPS(NK),SIG(NK),DIP(NK),POL(NK),
     3 ZROT(NK),F(NK,NK), NLIN(NK)
      character cckwrk(lencwk)*16, ksym(nk)*16, line*80
      logical kerr,ierr
C
      data kerr/.false./, x/nk*small/, ksym/nk*' '/
      DATA BOLTZ, BOLTZ1, PI/1.38D-16, 8.314D07, 3.141592D0/
C
C         OPEN THE LINK FILES
C
      OPEN(UNIT=LINK, STATUS='OLD', FORM='UNFORMATTED', 
     &     FILE='chem.bin')
      OPEN(UNIT=LINKMC, STATUS='OLD', FORM='UNFORMATTED',
     1     FILE='tran.bin')
C
C         INITIALIZE CHEMKIN
C
      CALL CKINIT (LENIWK, LENWK, lencwk, LINK, LOUT, ICKWRK, CKWRK,
     &              cckwrk)
      CALL CKINDX (ICKWRK, CKWRK, MM, KK, II, NFIT)
      if (kk.gt.nk) then
          write(lout,*)'  Species dimension too small..must 
     & be at least ',KK
          stop
      endif
c
      CALL CKSYMS (cckwrk, lout,ksym,ierr)
      if (ierr) kerr = .true.
      call ckwt(ickwrk,rkwrk,wt)
      CALL CKRP (ICKWRK, CKWRK, RU, RUC, PATM)
C
C         INITIALIZE THE TRANSPORT PACKAGE
C
      CALL MCINIT (LINKMC, LOUT, LENIMC, LENRMC, IMCWRK, RMCWRK)
C  INPUT-
C    LINKMC  - LOGICAL UNIT NUMBER OF THE LINKING FILE.
C                  FITTING CODE WRITE TO DEFAULT UNIT 35
C    LOUT    - LOGICAL UNIT NUMBER FOR PRINTED OUTPUT.
C    LENIMC  - ACTUAL DIMENSION OF THE INTEGER STORAGE AND WORKING
C              SPACE, ARRAY IMCWRK(*).  LENIMC MUST BE AT LEAST:
C                LENIMC = 4*KK + NLITE
C                 WHERE, KK    = NUMBER OF SPECIES.
C                        NLITE = NUMBER OF SPECIES WITH MOLECULAR WEIGHT
C                                LESS THAN 5.
C    LENRMC  - ACTUAL DIMENSION OF THE FLOATING POINT STORAGE AND
C              WORKING SPACE, ARRAY RMCWRK(*).  LENRMC MUST BE AT LEAST:
C                LENRMC = KK*(19 + 2*NO + NO*NLITE) + (NO+15)*KK**2
C                 WHERE, KK    = NUMBER OF SPECIES.
C                        NO    = ORDER OF THE POLYNOMIAL FITS,
C                                DEFAULT, NO=4.
C                        NLITE = NUMBER OF SPECIES WITH MOLECULAR WEIGHT
C                                LESS THAN 5.
C
C  WORK-
C    IMCWRK  - ARRAY OF INTEGER STORAGE AND WORK SPACE.  THE STARTING
C              ADDRESSES FOR THE IMCWRK SPACE ARE STORED IN
C              COMMON /MCMCMC/.
C                  DIMENSION IMCWRK(*) AT LEAST LENIMC.
C    RMCWRK  - ARRAY OF FLOATING POINT STORAGE AND WORK SPACE.  THE
C              STARTING ADDRESSES FOR THE RMCWRK SPACE ARE STORED IN
C              COMMON /MCMCMC/.
C                  DIMENSION RMCWRK(*) AT LEAST LENRMC.
C
C         SET ALL INITIAL MOLE FRACTIONS TO A SMALL NUMBER
c         DON't use zero or MS FORTRAN gets upset.
C
      DO 20 K=1,KK
      X(K) = small
   20 CONTINUE
C
C         READ PRESSURE AND TEMPERATURE
C
      open (unit=lsave, file='dtp.out')
      WRITE (LOUT,7000)
      READ (LIN,*) PA, T
      WRITE (LOUT,7010) PA, T
      WRITE (LSAVE,7010) PA, T
      P =  PATM*PA
C
C         READ THE INITIAL NON-ZERO MOLES
C
   40 CONTINUE
      WRITE(LOUT,*)' Enter the species followed by the mole fraction'
      WRITE(LOUT,*)' Enter END after entering the last species'
      READ  (LIN,7600,END=45)LINE
      WRITE (LOUT,7610)LINE
      ILEN = INDEX (LINE, '!')
      IF (ILEN .EQ. 1) GO TO 40
C
      ILEN = ILEN - 1
      IF (ILEN .LE. 0) ILEN = LEN(LINE)
      IF (INDEX(LINE(:ILEN), 'END') .EQ. 0) THEN
         IF (LINE(:ILEN) .NE. ' ') THEN
            CALL CKSNUM (LINE(:ILEN), 1, LOUT, KSYM, KK, KNUM,
     1                   NVAL, VAL, IERR)
            IF (IERR) THEN
               WRITE (LOUT,*) ' Error reading moles...'
               KERR = .TRUE.
            ELSE
               X(KNUM) = VAL(1)
            ENDIF
         ENDIF
         GO TO 40
      ENDIF
C
   45 CONTINUE
C
C        NORMALIZE THE MOLE FRACTIONS
C
      XTOT=0.0D0
      DO 50 K=1,KK
      XTOT = XTOT + X(K)
   50 CONTINUE
      DO 55 K=1,KK
      X(K) = X(K)/XTOT
      WRITE (LSAVE,'(1X,1A10,'' X = '',G12.4)') KSYM(K)(:10),X(K)
   55 CONTINUE
C
C	Calculate the thermodynamic properties
c	Added by jes 16-Mar-84
C	Molecular weight
C
      CALL CKMMWX(X,ICKWRK,CKWRK,WTM)
      CALL CKWT(ICKWRK,CKWRK,WT)
C
C 	DENSITY
C
      CALL CKRHOX(P,T,X,ICKWRK,CKWRK,RHO)
C
      WRITE (LOUT,9000) WTM,WTM/1000,RHO,RHO*1000
      WRITE (LSAVE,9000) WTM,WTM/1000,RHO,RHO*1000
 9000 FORMAT(//4X,'MEAN MOLECULAR WEIGHT = ',1PD12.4,' g/mol   = ',
     11PD12.4,' kg/mol',/4X,'MEAN DENSITY =',10X,1PD12.4,
     1' g/cm**3 = ',1PD12.4,' kg/m**3',/)
C
C         CONVERT TO MASS FRACTION
C
      CALL CKXTY (X, ICKWRK, CKWRK, Y)
C
C	MEAN THERMODYNAMIC PROPERTIES (MASS UNITS)
C
      CALL CKCPBS(T,Y,ICKWRK,CKWRK,CPBMS)
      CALL CKCVBS(T,Y,ICKWRK,CKWRK,CVBMS)
      WRITE(LOUT,9010)CPBMS,CPBMS/10000,CVBMS,CVBMS/10000
      WRITE(LSAVE,9010)CPBMS,CPBMS/10000,CVBMS,CVBMS/10000
 9010 FORMAT(4X,'MEAN c_p = ',1PD12.4,' erg/g*K = ',1PD12.4,' J/kg*K',
     1/4X,'MEAN c_v = ',1PD12.4,' erg/g*K = ',1PD12.4,' J/kg*K',/)
C 9010 FORMAT(4X,'MEAN SPECIFIC HEAT AT CONSTANT PRESSURE ',
C     11PD12.4//,MEAN SPECIFIC HEAT AT CONSTANT VOLUME (ERG/G-K) ',11PD12.4/)
C
      CALL CKABMS(P,T,Y,ICKWRK,CKWRK,ABMS)
      CALL CKGBMS(P,T,Y,ICKWRK,CKWRK,GBMS)
      CALL CKHBMS(P,T,ICKWRK,CKWRK,HBMS)
C
      WRITE (LOUT,9020)ABMS,ABMS/10000,GBMS,GBMS/10000,HBMS,HBMS/10000
      WRITE (LSAVE,9020)ABMS,ABMS/10000,GBMS,GBMS/10000,HBMS,HBMS/10000
9020  FORMAT(4X,'MEAN HELMHOLTZ FREE ENERGY = ',1PD12.4,' erg/g = ',
     11PD12.4,' J/kg',/4X,'MEAN GIBBS FREE ENERGY =',5X,1PD12.4,
     1' erg/g = ',1PD12.4,' J/kg',/4X,'MEAN ENTHALPY =',14X,1PD12.4,
     1' erg/g = ',1PD12.4,' J/kg',/)
C 9020  FORMAT(4X,'MEAN HELMHOLTZ FREE ENERGY (ERG/G) ',1PD12.4//,
C     14X,'MEAN GIBBS FREE ENERGY (ERG/G) ',1PD12.4//,10X,
C     1'MEAN ENTHALPY (ERG/G) ',1PD12.4/)
C
      CALL CKSBMS(P,T,Y,ICKWRK,CKWRK,SBMS)
      CALL CKUBMS(T,Y,ICKWRK,CKWRK,UBMS)
C
      WRITE(LOUT,9030)SBMS,SBMS/10000,UBMS,UBMS/10000
      WRITE(LSAVE,9030)SBMS,SBMS/10000,UBMS,UBMS/10000
C 9030  FORMAT(4X,'MEAN STANDARD STATE ENTROPY (ERG/G-K) ',1PD12.4,
C     1//,4X,'MEAN INTERNAL ENERGY (ERG/G) ',1PD12.4/)
 9030 FORMAT(4X,'MEAN STANDARD STATE ENTROPY = ',1PD12.4,' erg/g*K = ',
     11PD12.4,' J/kg*K',/4X,'MEAN INTERNAL ENERGY =',8X,1PD12.4,
     1' erg/g*K = ',1PD12.4,' J/kg*K',/)

C	
C         PURE SPECIES CONDUCTIVITY AND VISCOSITY
C
      CALL MCSCON (T, RMCWRK, CON)
      CALL MCSVIS (T, RMCWRK, VIS)
      WRITE (LOUT, 8051)
      WRITE (LSAVE,8051)
      DO 100 K=1,KK
      WRITE (LOUT, 8030) KSYM(K)(:10), CON(K)
      WRITE (LSAVE,8030) KSYM(K)(:10), CON(K)
  100 CONTINUE
      WRITE (LOUT,'(A)')''
      WRITE (LSAVE,'(A)')''
      DO 101 K=1,KK
      WRITE (LOUT, 8031) KSYM(K)(:10), CON(K)/100000
      WRITE (LSAVE,8031) KSYM(K)(:10), CON(K)/100000
  101 CONTINUE
C
      WRITE (LOUT, 8051)
      WRITE (LSAVE,8051)
      DO 110 K=1,KK
      WRITE (LOUT, 8040) KSYM(K)(:10), VIS(K)
      WRITE (LSAVE,8040) KSYM(K)(:10), VIS(K)
  110 CONTINUE
      WRITE (LOUT,'(A)')''
      WRITE (LSAVE,'(A)')''
      DO 111 K=1,KK
      WRITE (LOUT, 8041) KSYM(K)(:10), VIS(K)/10
      WRITE (LSAVE,8041) KSYM(K)(:10), VIS(K)/10
  111 CONTINUE
C
C         BINARY DIFFUSION COEFFICIENTS
C
      CALL MCSDIF (P, T, NK, RMCWRK, DJK)
      WRITE (LOUT, 8051)
      WRITE (LSAVE,8051)
      CALL PRNTDJK (LOUT,NK,KK,KSYM,DJK)
      CALL PRNTDJK (LSAVE,NK,KK,KSYM,DJK)
C
C        EVALUATE MIXTURE CONDUCTIVITY AND VISCOSITY
C
      CALL MCACON (T, X, RMCWRK, COND)
      CALL MCAVIS (T, X, RMCWRK, VISC)
      WRITE (LOUT, 8000) COND
      WRITE (LSAVE,8000) COND
      WRITE (LOUT, 8001) COND/100000
      WRITE (LSAVE,8001) COND/100000
      WRITE (LOUT, 8010) VISC
      WRITE (LSAVE,8010) VISC
      WRITE (LOUT, 8011) VISC/10
      WRITE (LSAVE,8011) VISC/10
C
C        MIXTURE PROPERTIES BY WILKES FORMULAS
C
c      CALL TPWCON (T, Y, TPWRK, WCOND)
c      CALL TPWVIS (T, Y, TPWRK, WVISC)
C      WRITE (LOUT, 8002) WCOND
C      WRITE (LSAVE,8002) WCOND
C      WRITE (LOUT, 8012) WVISC
C      WRITE (LSAVE,8012) WVISC
C
C       EVALUATE MIXTURE DIFFUSION COEFFICIENTS
C
      CALL MCMDIF (P, T, X, NK, IMCWRK,RMCWRK,D)
      WRITE (LOUT, 8051)
      WRITE (LSAVE,8051)
      DO 200 K=1,KK
      WRITE (LOUT, 8020) KSYM(K)(:10), D(K)
      WRITE (LSAVE,8020) KSYM(K)(:10), D(K)
  200 CONTINUE
      WRITE (LOUT, 8051)
      WRITE (LSAVE,8051)
      DO 201 K=1,KK
      WRITE (LOUT, 8021) KSYM(K)(:10), D(K)/10000
      WRITE (LSAVE,8021) KSYM(K)(:10), D(K)/10000
  201 CONTINUE
C
C         THERMAL DIFFUSION RATIOS
C
      CALL MCATDR (T, X, IMCWRK, RMCWRK, TDR)
      WRITE (LOUT, 8051)
      WRITE (LSAVE,8051)
      DO 300 K=1,KK
      WRITE (LOUT, 8060) KSYM(K)(:10), TDR(K)
      WRITE (LSAVE,8060) KSYM(K)(:10), TDR(K)
  300 CONTINUE
C
C COLLISION PROPERTIES
C
      TOTALN = P/(BOLTZ*T)
      WRITE (LOUT,8070) TOTALN
      WRITE (LSAVE,8070) TOTALN
 8070 FORMAT (//,4X,'TOTAL MOLECULAR DENSITY, MOLECULEs/cm**3 ',
     *1PG12.4//)
C
      CALL MCPRAM(IMCWRK,RMCWRK,EPS,SIG,DIP,POL,ZROT,NLIN)
C
C MATRIX OF COLLISION FREQUENCIES, F(I,J) = COLLISION RATE (PER 
C SECOND) OF MOLECULE I WITH MOLECULE J
C
      DO 500 I=1,KK
         DO 400 J=I,KK
            WRED = WT(I)*WT(J)/(WT(I)+WT(J))
            CAVG = 2.0D0*DSQRT(2.D0*BOLTZ1*T/(PI*WRED))
            SAVG = 1.0D-08*(SIG(I) + SIG(J))/2.D0
            F(I,J) = TOTALN*PI*SAVG*SAVG*CAVG
            F(J,I) = X(I)*F(I,J)
            F(I,J) = X(J)*F(I,J)
  400    CONTINUE
  500 CONTINUE
C
c      WRITE(LOUT,8080)
c      WRITE(LSAVE,8080)
 8080 FORMAT(//,10X,'SPECIES',T30,' DENSITY ',T45,' AVG SPEED ',
     *T60,' COLLISION RATE ',T75,' MFP ')
 8090 FORMAT(/,10X,1A10,T30,1PD15.3,T45,1PD15.3,T60,1PD15.3,T75,1PD15.3)
c      DO 600 K=1,KK
c         CAVG = DSQRT(2.D0*BOLTZ1*T/WT(K)/PI)*2.D0
c         FAVG = 0.0D0
c         DO 700 J=1,KK
c  700       FAVG = F(K,J) + FAVG   
c         ALAMBDA = CAVG/FAVG
c      WRITE (LOUT, 8090) KSYM(K)(1:10),X(K)*TOTALN,CAVG,
c     *FAVG,ALAMBDA
c      WRITE (LSAVE, 8090) KSYM(K)(1:10),X(K)*TOTALN,CAVG,
c     *FAVG,ALAMBDA
c  600 CONTINUE
C
c      close(lsave)
      STOP
C
C        FORMATS
C
 7000 FORMAT (1X, 'INPUT PRESSURE(ATM) AND TEMPERATURE(K)')
 7010 FORMAT (1X, 'PRESSURE(ATM) = ', 1PD12.3, /,
     1        1X, 'TEMPERATURE(K) = ', 1PD12.2)
 7020 FORMAT (1X, 'INPUT MOLES OF NEXT SPECIES')
C
 7600 FORMAT (1A80)
 7610 FORMAT (1X, 1A80)
C
 8000 FORMAT (//,4X,'MIXTURE CONDUCTIVITY =',4X,1PD15.3,' erg/cm*K*s')
 8001 FORMAT ( 4X, 'MIXTURE CONDUCTIVITY SI = ', 1PD15.3,' J/m*K*s')
 8002 FORMAT (//, 4X, 'WILKE, MIXTURE CONDUCTIVITY = ', 1PD15.3)
 8010 FORMAT (/, 4X, 'MIXTURE VISCOSITY    = ', 1PD15.3,' gm/cm*s')
 8011 FORMAT ( 4X, 'MIXTURE VISCOSITY SI = ', 1PD15.3,' Pa*s')
 8012 FORMAT (//, 4X, 'WILKE, MIXTURE VISCOSITY    = ', 1PD15.3)
 8020 FORMAT (4X, 'DIFFUSION COEFFICIENT FOR ',1A10, '=', 1PD15.3,
     *' cm**2/s')
 8021 FORMAT (4X, 'DIFFUSION COEFFICIENT SI FOR ',1A10, '=', 1PD15.3,
     *' m**2/s')
 8030 FORMAT (4X, 'CONDUCTIVITY FOR ',1A10, '=', 1PD15.3,' erg/cm*K*s')
 8031 FORMAT (4X, 'CONDUCTIVITY SI FOR ',1A10, '=', 1PD15.3,' J/m*K*s')
 8040 FORMAT (4X, 'VISCOSITY FOR ',1A10, '=', 1PD15.3,' gm/cm*s')
 8041 FORMAT (4X, 'VISCOSITY SI FOR ',1A10, '=', 1PD15.3,' N/m*s')
 8050 FORMAT (//)
 8051 FORMAT (/)
 8060 FORMAT (4X,'THERMAL DIFFUSION RATIOS FOR ', 1A10, '=', 1PD15.3)
C
      END
      SUBROUTINE PRNTDJK (LU,NDIMKK,KK,KSYM,DJK)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION DJK(NDIMKK,KK)
      CHARACTER KSYM(NDIMKK)*16
C
      KPLN=5
C
      WRITE (LU, 7000)
C
      DO 100 M=1, KK, KPLN
      K1 = M
      K2 = M+KPLN-1
      IF (K2.GT.KK) K2=KK
      WRITE (Lu,7060)  (KSYM(K)(:10),K=K1,K2)
      DO 100 J=1,KK
      WRITE (LU,7050)  KSYM(J)(:10), (DJK(J,K),K=K1,K2)
  100 CONTINUE
C
      RETURN
C
 7000 FORMAT (/, ' BINARY DIFFUSION COEFFICIENTS (cm**2/s): ')
 7050 FORMAT (1X, 1A10, 5(1PD11.3))
 7060 FORMAT (/, 16X, 5(1A10,1X))
      END
     
